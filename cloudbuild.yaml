steps:
  # This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build'
  args:
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/ja-rentals-backend:latest'
    - '.'

  # This step pushes the image to container registry
  # The PROJECT_ID and SHORT_SHA variables are automatically
  # replaced by Cloud Build
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args: 
    - 'push'
    - 'gcr.io/$PROJECT_ID/ja-rentals-backend:latest'
  
# generate new deployment yaml based on $SHORT_SHA
- name: 'gcr.io/$PROJECT_ID/envsubst'
  id: 'Substituting Environment Values'
  args:
    - 'deployment.yaml'
    - 'deployment.yaml'
  env:
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=main-standard-cluster'
    - 'SHORT_SHA="$SHORT_SHA"'
    - 'APP_ID=${_APP_ID}'
    - 'PORT=${_PORT}'
    - 'LOG_LEVEL=${_LOG_LEVEL}'
    - 'REQUEST_LIMIT=${_REQUEST_LIMIT}'
    - 'SESSION_SECRET=${_SESSION_SECRET}'
    - 'OPENAPI_SPEC=${_OPENAPI_SPEC}'
    - 'MONGO_HOST=${_MONGO_HOST}'
    - 'MONGO_PORT=${_MONGO_PORT}'
    - 'MONGO_DB=${_MONGO_DB}'
    - 'SCRAPER_CRON_SCHEDULE=${_SCRAPER_CRON_SCHEDULE}'


# Deploy application on kubernetes
- name: 'gcr.io/cloud-builders/kubectl'
  id: 'Deploy on Kubernetes'
  env:
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
    - 'CLOUDSDK_CONTAINER_CLUSTER=main-standard-cluster'
    - 'SHORT_SHA="$SHORT_SHA"'
  args:
    - 'apply'
    - '-f'
    - 'deployment.yaml'